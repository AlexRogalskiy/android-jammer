<resources xmlns:tools="http://schemas.android.com/tools">
    <string name="app_name">PilferShush Jammer</string>
    <string name="passive_service_name">PilferShush Passive</string>
    <string name="active_service_name">PilferShush Active</string>
    <string name="action_about">About</string>
    <string name="action_readme">Readme</string>
    <string name="action_power">Power</string>
    <string name="action_debug">Debug</string>

    <string name="action_power_state">Available for Android 6.0 (API 23) Marshmallow and upwards only.</string>

    <string name="tab_text_1">Home</string>
    <string name="tab_text_2">Inspector</string>
    <string name="tab_text_3">Settings</string>

    <string name="perms_state_1">Record Audio</string>
    <string name="perms_state_2_1">PilferShush Jammer needs to make a permission request to access and enable jamming of the microphone, otherwise this app will not work.</string>
    <string name="perms_state_2_2">This app does not listen to any audio, does not record any audio and does not connect to the internet.</string>
    <string name="perms_state_3">Permission denied, please close this app, it will not work without RECORD AUDIO permission.</string>
    <string name="perms_state_4">Closing app due to no RECORD_AUDIO permission granted.</string>

    <string name="dialog_button_save">Save</string>
    <string name="dialog_button_cancel">Cancel</string>
    <string name="dialog_button_okay">OK</string>
    <string name="dialog_button_yes">YES</string>
    <string name="dialog_button_no">NO</string>
    <string name="dialog_button_off">OFF</string>
    <string name="dialog_button_on">ON</string>
    <string name="dialog_button_dismiss">Dismiss</string>
    <string name="dialog_button_continue">Continue</string>
    <string name="dialog_button_source">GITHUB</string>
    <string name="dialog_button_moreinfo">More Info</string>
    <string name="notify_stop_button">STOP PASSIVE</string>

    <string name="options_dialog_1">Buffer read lock</string>

    <string name="doze_dialog_title">Change Settings</string>
    <string name="doze_dialog_1">PilferShush Jammer requests to be on the Android system Battery Optimizations exceptions allowlist.</string>
    <string name="doze_dialog_2">From Android 6.0 (API 23) Marshmallow onwards a new Doze battery conservation function was introduced by Android that defers background CPU activity for periods of time.</string>
    <string name="doze_dialog_3">While this app uses very low to negligible resources, the microphone Passive Jammer requires a background service to be running for it to work.</string>
    <string name="doze_dialog_4">For long term reliable use of the Jammer any battery optimisers or managers need to be set to allow PilferShush to continue running unimpeded.</string>
    <string name="doze_dialog_5">To add PilferShush to the system allowlist press "continue" to proceed to the Android Settings page, then select "All Apps" from drop down menu, search for PilferShush and select it.</string>

    <string name="audiofocus_check_1">AudioFocus check\u2026</string>
    <string name="audiofocus_check_2">AudioFocus request granted.</string>
    <string name="audiofocus_check_3">AudioFocus request failed.</string>
    <string name="audiofocus_check_4">AudioFocus unknown.</string>
    <string name="audiofocus_check_5">AudioFocus interrupt request.</string>
    <string name="audiofocus_check_6">AudioFocus interrupt request ignored.</string>
    <string name="audiofocus_check_7">AudioFocus interrupt request granted.</string>
    <string name="audiofocus_check_8">IRQ_TELEPHONY loss_transient.</string>

    <string name="resume_status_1">PASSIVE SERVICE FOUND</string>
    <string name="resume_status_2">PASSIVE SERVICE NOT FOUND</string>
    <string name="resume_status_3">ACTIVE SERVICE FOUND</string>
    <string name="resume_status_4">ACTIVE SERVICE NOT FOUND</string>
    <string name="resume_status_5">RESUME AUDIOFOCUS GRANT</string>
    <string name="resume_status_6">RESUME AUDIOFOCUS LOSS</string>
    <string name="resume_status_7">runPassive() when PASSIVE_RUNNING</string>
    <string name="resume_status_8">runActive() when ACTIVE_RUNNING</string>

    <string name="main_scanner_1" translatable="false">Active</string>
    <string name="main_scanner_2" translatable="false">Passive</string>
    <string name="main_scanner_3">Running passive jamming\u2026</string>
    <string name="main_scanner_4">Stop passive jamming.</string>
    <string name="main_scanner_5">Running active jamming\u2026</string>
    <string name="main_scanner_6">Stop active jamming.</string>

    <string name="main_inspector_1" translatable="false">Summary</string>
    <string name="main_inspector_2" translatable="false">Inspect</string>
    <string name="main_inspector_3" translatable="false">SDK list</string>

    <string name="app_status_1">passive jammer running,</string>
    <string name="app_status_2">passive jammer not running,</string>
    <string name="app_status_3">active jammer running.</string>
    <string name="app_status_4">active jammer not running.</string>
    <string name="app_status_5">EQ is turned off.</string>
    <string name="app_status_6">EQ is turned on.</string>
    <string name="app_status_7">EQ is not available.</string>
    <string name="app_status_8">Active jammer switched to tones.</string>
    <string name="app_status_9">Active jammer switched to whitenoise.</string>
    <string name="app_status_9_1">Active jammer switched to shadow.</string>
    <string name="app_status_10">Passive jammer running.</string>
    <string name="app_status_11">Active jammer running.</string>
    <string name="app_status_12">Tap to return to app.</string>
    <string name="app_status_13">Passive jammer buffer read lock enabled. REQUIRES PASSIVE JAMMER RESTART.</string>
    <string name="app_status_14">Passive jammer buffer read lock disabled. REQUIRES PASSIVE JAMMER RESTART.</string>
    <string name="app_status_15">Waveform swtched to sine.</string>
    <string name="app_status_16">Waveform swtched to square.</string>
    <string name="app_status_17">Waveform swtched to sawtooth.</string>

    <string name="intro_1">PilferShush Jammer attempts to block unwanted and hidden use of the hardware microphone.</string>
    <string name="intro_2">Via a PASSIVE jamming technique that engages the microphone blocking other apps from using it.</string>
    <string name="intro_3">Or via an ACTIVE jammer that emits either tones or white noise covering 18kHz to 24kHz.</string>
    <string name="intro_4">This app does NOT listen to or record any of the audio from the microphone during this.</string>
    <string name="intro_5">Info summary shows relevant, basic information about all user installed apps.</string>
    <string name="intro_6_1">Search shows the background services and receivers listed for a specific app chosen from a popup list.</string>
    <string name="intro_6_2">List SDK shows the names of NUHF/ACR packages searched.</string>
    <string name="intro_6_3">Apps can contain multiple packages each with different names.</string>
    <string name="intro_7">Use Settings to change the active jamming settings.</string>
    <string name="intro_8">Active jammer set to:\u0020</string>

    <!--
    readme dialog text
    -->
    <string name="readme_dialog_1">README</string>
    <string name="readme_dialog_2">The INSPECTOR function is not a proof but merely a way to provide more information to the user about any installed apps on their device.</string>
    <string name="readme_dialog_3">Summary: lists user installed apps and checks for record audio ability, start at boot, background services, background receivers, NUHF/ACR SDK name inclusion and Accessibility service use for gaining special functions.</string>
    <string name="readme_dialog_4">Search: provides more information about a specific user installed app and any services or receivers it has. These names are usually an indication of their function but they can be non-sensical, random letters.</string>
    <string name="readme_dialog_5">SDK list: is the current names of known packages from companies that provide near ultra-high frequency listening and/or automated content recognition abilities. PilferShush app searches the user installed apps for any package names that make a match from this list. This is not a proof of any app behaviour but merely one method to provide more information to the user about the apps on their devices.</string>
    <string name="readme_dialog_6">The PASSIVE Jammer is the primary method of defence against unwanted use of the device microphone by user installed apps. It utilises a current feature of the Android API that insists that only one user app may use the microphone at a time. PilferShush asks the Android system for access to the microphone via the AudioRecord function and then asks to start recording. At this point the microphone is now ready to provide the requesting app with audio data. PilferShush does not ask for this audio data but simply maintains its hold on the microphone. Initially, on older Android devices, this was enough but with later versions it is now necessary to create and prepare a MediaRecorder function so that PilferShush is still allowed to access the microphone while running in the background. System apps such as Telephone will always override and take control of the microphone. Some voice assistants and accessibility apps, depending on their setup, may still access the microphone during this passive jamming. As of Android 10 (Q) concurrent use of the microphone is allowed which means another user app may take over the microphone while PilferShush is jamming in the background. Limited responses are possible at the moment but a pop up should appear in the middle of the screen to inform the user of an Android 10 device that another app has control of the microphone and that PilferShush is attempting to regain blocking control of the microphone. More research is being carried out.</string>
    <string name="readme_dialog_7">The ACTIVE Jammer is an experimental method of jamming NUHF beacon signals with random sounds that fall within the NUHF ranges as measured from 18000 hz to 24000 hz. NUHF beacons send out specific tones that are encoded to make sense to the specific app it is targeting. Usually these specific tones are centered around a particular frequency (carrier) with other meaningful tones emitted within a range above and below that frequency (drift limit). The broadcast of these NUHF beacon signals are played very fast (drift speed) and in a frequency range that humans can\'t ordinarily hear. PilferShush active jammer attempts to block these beacon signals by flooding the same frequency range with meaningless random tones. You should assume this method is unreliable, for reasons beyond this README, even if you know what specific settings are likely to match a particular NUHF beacon signal.</string>
    <string name="readme_dialog_8">For more research and information click the "MORE INFO" button to open the project webpage in your browser.</string>

    <string name="about_version">version\u0020</string>
    <string name="about_dialog_1">About PilferShush Jammer</string>
    <string name="about_dialog_2">This is an experimental research app designed to unobtrusively block unwanted, hidden use of the onboard microphone.</string>
    <string name="about_dialog_3">It has an Inspector to find possible matches to known SDK package names that use Near Ultra High Frequencies or Audio Content Recognition. The search method may result in false positives .</string>
    <string name="about_dialog_4">It is open source, available at github, for viewing and raising issues.</string>
    <string name="about_dialog_5">Part of ongoing Android audio counter-surveillance research.</string>
    <string name="about_dialog_6">Option below to enable audio record buffer read lock (possible slight increase in CPU overhead).</string>

    <string name="debug_dialog_1">Debug mode</string>
    <string name="debug_dialog_2">This mode will print some extra messages to the app views as well as some Log messages to any attached ADB</string>

    <string name="settings_label_1">Active Jammer Settings</string>
    <string name="settings_label_2">Passive Jammer Settings</string>

    <string name="buffer_info_text_1">Enable audioRecord buffer read lock (more CPU)</string>
    <string name="buffer_label_1">ENABLE</string>
    <string name="buffer_label_2">DISABLE</string>

    <string name="mic_source_text_1">Microphone source (VoIP may use CPU)</string>
    <string name="mic_source_label_1">Default</string>
    <string name="mic_source_label_2">VoIP</string>

    <string name="drift_dialog_1">Set drift speed</string>
    <string name="drift_dialog_2">10</string>
    <string name="drift_dialog_3">(1 = fast, 10 = slow)</string>

    <string name="jammer_dialog_1">Change active jammer signal type.</string>
    <string name="jammer_dialog_2">Slow audible test tone drift (~440Hz)</string>
    <string name="jammer_dialog_3">Full NUHF drift (18kHz-24kHz)</string>
    <string name="jammer_dialog_4">User set NUHF carrier</string>
    <string name="jammer_dialog_5">User set NUHF drift</string>
    <string name="jammer_dialog_6">Set carrier frequency</string>
    <string name="jammer_dialog_8">19000</string>
    <string name="jammer_dialog_9">Set drift limit</string>
    <string name="jammer_dialog_10">1000</string>
    <string name="jammer_dialog_11">(All frequencies constrained to NUHF)</string>

    <string name="jammer_dialog_13">Jammer type changed to\u0020</string>
    <string name="jammer_dialog_14">Jammer type changed to 1000Hz drift with carrier at\u0020</string>
    <string name="jammer_dialog_15">Microphone source changed to\u0020</string>

    <string name="active_dialog_1">Select sound type</string>
    <string name="active_dialog_2">Active jammer output sound type</string>
    <string name="active_dialog_3">TONES</string>
    <string name="active_dialog_4">NOISE</string>
    <string name="active_dialog_5">TEST</string>
    <string name="active_dialog_6">NUHF</string>
    <string name="active_dialog_7">SHADOW</string>
    <string name="active_dialog_8">sine</string>
    <string name="active_dialog_9">square</string>
    <string name="active_dialog_10">sawtooth</string>

    <string name="eq_check_1">Testing for device audiofx equalizer.</string>
    <string name="eq_check_2">Device audiofx equalizer test passed.</string>
    <string name="eq_check_3">Device audiofx equalizer test failed.</string>
    <string name="eq_check_4">Number of EQ bands:\u0020</string>
    <string name="eq_check_5">adjust EQ minimum milliBels:\u0020</string>
    <string name="eq_check_6">adjust EQ maximum milliBels:\u0020</string>
    <string name="eq_check_7">HPF test to reduce EQ twice by minEQ value:\u0020</string>
    <string name="eq_check_8">testEQ Exception, possibly device specific implementation.</string>

    <string name="audio_check_pre_1">Checking for best audio record type.</string>
    <string name="audio_check_pre_2">Checking for best audio output type.</string>
    <string name="audio_check_1">Determine record audio type failure.</string>
    <string name="audio_check_2">Unable to initiate audio output.</string>
    <string name="audio_check_3">Error: No audioSettings object found.</string>
    <string name="audio_check_4">Exception error initialising audioTrack.</string>
    <string name="audio_check_5">Setting frequency to within device limit:\u0020</string>
    <string name="audio_check_6">Setting frequency to within NUHF limit:\u0020</string>
    <string name="audio_check_7">Setting frequency to:\u0020</string>

    <!--
        PassiveJammer.java
        -->
    <string name="passive_state_1">Passive Jammer init.</string>
    <string name="passive_state_2">Passive Jammer failed to init.</string>
    <string name="passive_state_3">Passive Jammer start.</string>
    <string name="passive_state_4">Passive Jammer audio status error: invalid operation.</string>
    <string name="passive_state_5_1">Passive Jammer audio status error: uninitialized.</string>
    <string name="passive_state_5_2">Possible cause: microphone already in use.</string>
    <string name="passive_state_6">Passive Jammer get recording state = false.</string>
    <string name="passive_state_7">Passive Jammer exception, failed to run.</string>
    <string name="passive_state_8">Passive Jammer audio record failed to init.</string>
    <string name="passive_state_9">Passive Jammer stop and release.</string>
    <string name="passive_state_10">Passive Jammer not running.</string>
    <string name="passive_state_11">Passive Jammer buffer read lock.</string>
    <string name="passive_state_12">MediaRecorderPlacebo running.</string>
    <string name="passive_state_13">MediaRecorderPlacebo not running.</string>
    <string name="passive_state_14">MediaRecorderPlacebo prepare() failed.</string>
    <string name="passive_state_15">MediaRecorderPlacebo release and null.</string>

    <!--
        ActiveJammer.java
        -->
    <string name="active_state_1">threadPlay run exception.</string>
    <string name="active_state_2">stopPlayer thread exception.</string>
    <string name="active_state_3">stopPlayer audioTrack exception.</string>

    <!--
        ~ JammerService.java
        -->
    <string name="service_state_1">PilferShush Jammer notifications</string>
    <string name="service_state_2">Active Jammer service started.</string>
    <string name="service_state_3">Active Jammer service stopped.</string>
    <string name="service_state_4">Passive Jammer service started.</string>
    <string name="service_state_5">Passive Jammer service stopped.</string>

    <!--
        background userapp checker
        -->
    <string name="inspector_row_text" translatable="false">Element</string>
    <string name="sdk_names_list">List of NUHF/ACR SDK package names searched:\u0020</string>
    <string name="dialog_userapps">Scan Apps List</string>

    <string name="userapp_scan_1">Userapp Checker fail.</string>
    <string name="userapp_scan_2">run user app checks\u2026</string>
    <string name="userapp_scan_3">User Apps with RECORD AUDIO:\u0020</string>

    <string name="userapp_scan_4">NO USER APPS FOUND FOR CHECKER.</string>
    <string name="userapp_scan_5">Found User App services for\u0020</string>
    <string name="userapp_scan_6">Found User App receivers for\u0020</string>
    <string name="userapp_scan_7">AppEntry list:\u0020</string>

    <string name="userapp_scan_8">Record audio apps found:\u0020</string>
    <string name="userapp_scan_9">No record audio apps found.</string>
    <string name="userapp_scan_10">\u0020possible NUHF/ACR SDK names detected. Check the User Apps Summary for more information.</string>
    <string name="userapp_scan_11">No NUHF/ACR SDK package names detected.</string>
    <string name="userapp_scan_12">No user apps found.</string>
    <string name="userapp_scan_13">USER APP SUMMARY.</string>
    <string name="userapp_scan_14">Error in background app checker.</string>
    <string name="userapp_scan_15">Possible NUHF/ACR SDK signature(s) with RECORD_AUDIO capability found.</string>
    <string name="userapp_scan_16">NUHF/ACR SDK signatures with RECORD_AUDIO capability not found.</string>

    <string name="userapp_scan_intro_1">Audio tracker SDKs may have TRUE in at least three categories.</string>
    <string name="userapp_scan_intro_2">This is not a proof of audio tracker behaviour or presence.</string>
    <string name="userapp_scan_intro_3">User App Name</string>
    <string name="userapp_scan_intro_4">User App package name</string>
    <string name="userapp_scan_intro_5">RECORD - use the microphone</string>
    <string name="userapp_scan_intro_6">BOOT - app can auto restart after the device is rebooted</string>
    <string name="userapp_scan_intro_7">SERVICE - long-running background operation</string>
    <string name="userapp_scan_intro_8">RECEIVER -  send or receive messages from the system or other apps</string>
    <string name="userapp_scan_intro_9">NUHF/ACR SDK - package name match found from current SDK list</string>
    <string name="userapp_scan_intro_10">ACCESSIBILITY - special functions about state of device</string>
    <string name="userapp_scan_intro_11">SERVICE with SDK - First service name found matching SDK list</string>
    <string name="userapp_scan_intro_12">RECEIVER with SDK - First receiver name found matching SDK list</string>

    <!--
    appEntry dialog text
    -->
    <string name="app_entry_text_1">SERVICE with SDK</string>
    <string name="app_entry_text_2">Full Services list:</string>
    <string name="app_entry_text_3">RECEIVER with SDK</string>
    <string name="app_entry_text_4">Full Receivers list:</string>

    <!--
     recording callback
    -->
    <string name="recording_callback_silenced">PilferShush WARNING: another app has control of the microphone.</string>
    <string name="recording_callback_not_silenced">PilferShush has control of the microphone.</string>

    <!--
     Passive jammer app widget
    -->
    <string name="passive_appwidget_name">Passive Jammer Control</string>
    <string name="passive_appwidget_text">Passive Control</string>
    <string name="passive_add_widget">Add widget</string>

    <!--
     Assistant jammer - testing
    -->
    <string name="action_assist" tools:ignore="MissingTranslation">Assistant Jammer</string>
    <string name="assist_dialog_1" tools:ignore="MissingTranslation">Voice Assistant Jammer</string>
    <string name="assist_dialog_2" tools:ignore="MissingTranslation">Testing the Voice Assistant Jammer, which will utilise BIND_VOICE_INTERACTION in an attempt to intercept and block any VOICE_RECOGNITION or VOICE_ASSISTANT service running in the background.</string>
    <string name="assist_dialog_3" tools:ignore="MissingTranslation">Tap on \'Assist app\' and choose PilferShush Jammer to activate</string>
    <string name="assist_dialog_4" tools:ignore="MissingTranslation">Tap on \'Assist app\' and choose PilferShush Jammer to deactivate</string>
    <string name="assist_dialog_activated" tools:ignore="MissingTranslation">Assistant Jammer is activated</string>
    <string name="assist_dialog_deactivated" tools:ignore="MissingTranslation">Assistant Jammer is deactivated</string>
    <string name="assist_dialog_blocked" tools:ignore="MissingTranslation">Assistant Jammer has blocked a Voice Interaction</string>

</resources>